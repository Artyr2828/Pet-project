<?php
namespace App\Service;
use Exception;
use App\Interfaces\ValidateUserInterface;
use App\Exception\InvalidUserDataException;
use App\Interfaces\RequestStructureValidatorInterface;
class UserService{
 private RequestStructureValidatorInterface $validateUser;
 private ValidateUserInterface $validatePassword;
 private ValidateUserInterface $validateEmail;
 private ValidateUserInterface $validateName;

 function register(array $data){
   // валидация данных
   error_log("Доходит до Service");
   //проверка есть ли вообще данные в массиве

   try{
    $user = $this->validateUser->ValidateDataStructure($data, "password", "email", "name");
    $this->validatePassword->validate($user->password); 
    $this->validateEmail->validate($user->email);
    $this->validateName->validate($user->name);
   }catch (Exception $e){
     throw $e;
   }
  }

  function __construct(RequestStructureValidatorInterface $validateUser, ValidateUserInterface $validatePassword, ValidateUserInterface $validateEmail, ValidateUserInterface $validateName){
   $this->validateUser = $validateUser;
   $this->validatePassword = $validatePassword;
   $this->validateEmail = $validateEmail;
   $this->validateName = $validateName;
  }

}
